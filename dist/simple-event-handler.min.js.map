{"version":3,"sources":["../src/simple-event-handler.js"],"names":["EventHandler","subscribe","events","fn","$scope","_subscribe","name","subscriptions","push","$on","unsubscribe","validateCallback","validateName","Array","length","throwNameError","forEach","fire","args","undefined","splice","indexOf","Function","Error","this","window","angular","module","service","exports"],"mappings":"AAAA,cACA,WACA,QAAAA,KAOA,QAAAC,GAAAC,EAAAC,EAAAC,GAqBA,QAAAC,GAAAC,GACAC,EAAAD,KACAC,EAAAD,OAGAC,EAAAD,GAAAE,KAAAL,GAEAC,GAAAA,EAAAK,KAAAL,EAAAK,IAAA,WAAA,WACAC,EAAAJ,EAAAH,KA5BAQ,EAAAR,GAEAD,EACA,gBAAAA,IACAU,EAAAV,GACAG,EAAAH,IACAA,YAAAW,QACAX,EAAAY,QACAC,IAGAb,EAAAc,QAAAJ,GACAV,EAAAc,QAAAX,IAEAU,IAGAA,IAgBA,QAAAE,GAAAX,EAAAY,GACAX,EAAAD,IAEAC,EAAAD,GAAAU,QAAA,SAAAb,GACAA,EAAAgB,QAAAD,EAAAA,QAIA,QAAAR,GAAAJ,EAAAH,GAGA,MAFAS,GAAAN,GACAK,EAAAR,GACAI,EAAAD,OACAC,GAAAD,GAAAc,OAAAb,EAAAD,GAAAe,QAAAlB,GAAA,IADA,EAIA,QAAAS,GAAAN,GACAA,GAAA,gBAAAA,IACAS,IAIA,QAAAJ,GAAAR,GACA,KAAAA,GAAAA,YAAAmB,WACA,KAAA,IAAAC,OAAA,iCAIA,QAAAR,KACA,KAAA,IAAAQ,OAAA,0BApEA,GAAAhB,KAEAiB,MAAAvB,UAAAA,EACAuB,KAAAP,KAAAA,EACAO,KAAAd,YAAAA,EAoEA,mBAAAe,UACAA,OAAAzB,aAAAA,EAEAyB,OAAAC,SACAA,QAAAC,OAAA,2BAAAC,QAAA,gBAAA5B,IAIA,mBAAA2B,UACAA,OAAAE,QAAA,GAAA7B","file":"simple-event-handler.min.js","sourcesContent":["'use strict';\n(function() {\n    function EventHandler() {\n        var subscriptions = {};\n\n        this.subscribe = subscribe;\n        this.fire = fire;\n        this.unsubscribe = unsubscribe;\n\n        function subscribe(events, fn, $scope) {\n            validateCallback(fn);\n\n            if(events) {\n                if(typeof events == 'string') {\n                    validateName(events);\n                    _subscribe(events);\n                } else if(events instanceof Array) {\n                    if(!events.length) {\n                        throwNameError();\n                    }\n\n                    events.forEach(validateName);\n                    events.forEach(_subscribe);\n                } else {\n                    throwNameError();\n                }\n            } else {\n                throwNameError();\n            }\n\n            function _subscribe(name) {\n                if (!subscriptions[name]) {\n                    subscriptions[name] = [];\n                }\n\n                subscriptions[name].push(fn);\n\n                $scope && $scope.$on && $scope.$on('$destroy', function () {\n                    unsubscribe(name, fn);\n                });\n            }\n        }\n\n        function fire(name, args) {\n            if (!subscriptions[name]) return;\n\n            subscriptions[name].forEach(function (fn) {\n                fn(args != undefined ? args : {}); // empty object can be used as a shared storage\n            });\n        }\n\n        function unsubscribe(name, fn) {\n            validateName(name);\n            validateCallback(fn);\n            if (!subscriptions[name]) return true;\n            subscriptions[name].splice(subscriptions[name].indexOf(fn), 1);\n        }\n        \n        function validateName(name) {\n            if (!name || typeof name != 'string') {\n                throwNameError();\n            }\n        }\n\n        function validateCallback(fn) {\n            if (!fn || !(fn instanceof Function)) {\n                throw new Error('callback function is required');\n            }\n        }\n\n        function throwNameError() {\n            throw new Error('event name is required');\n        }\n    }\n\n    if(typeof window != \"undefined\") {\n        window.EventHandler = EventHandler;\n\n        if(window.angular) {\n            angular.module('simple-event-handler', []).service('$eventHandler', EventHandler);\n        }\n    }\n\n    if(typeof module != \"undefined\") {\n        module.exports = new EventHandler();\n    }\n})();"]}